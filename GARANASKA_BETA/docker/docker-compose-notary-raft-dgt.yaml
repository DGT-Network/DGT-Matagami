# Copyright 2020 DGT NETWORK INC Â© Stanislav Parsov
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.6'

services:

  telebot-dgt:
    build:
      context: ..
      dockerfile: telebot/Dockerfile-${DISTR}
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - DGT_TOP=${DGT_TOP}
    image: telebot-dgt
    environment:
    - DGT_HOME=/project/peer
    - DGT_TOP=${DGT_TOP}
    - CRYPTO_BACK=${CRYPTO_BACK}
    - BOT_TOKEN=${BOT_TOKEN}
    - LA=${LA}
    volumes:
      - ..:/project/${DGT_TOP}
      - ../../dgt_notaries/n${V}:/project/peer
    container_name: telebot-dgt-n${V}
    networks:
    - network1
    ports:
      - ${NAPI}:${NAPI}
    depends_on:        
       - vault 
    command: |
      bash -c "
        bin/protogen;echo TELEGA LADDR=${LA} SADDR=${SADDR} ONBOT=${ONBOT} REST=${REST_API} CB=${CRYPTO_BACK} UN=${USER_NOTARY} BT=${BOT_TOKEN} NREST=${NREST};
        echo ##dgtadm notary n${V} -cb ${CRYPTO_BACK} -a vault-n${V}:${VPORT} -ca vault-n${V}:${CPORT}  -sa http://${SADDR} ${LA} ${REST_API}
        rm -f /project/peer/logs/bgt-bot*.log /project/peer/logs/rest-api-*.log ;
        notary init n${V}  -va http://vault-n${V}:${VPORT} ${LA}
        if [ ${NREST} == 'ON' ]; then (cd notary-api;dgt-notary-api -vv  --bind telebot-dgt-n${V}:${NAPI} ${REST_API} -cb ${CRYPTO_BACK}); else echo 'OFF NOTARY REST '; fi;
        cd telebot
        python3 setup.py clean --all
        python3 setup.py build
        echo dgt-telebot -vv  -nn n${V} --connect tcp://validator-${PNM}-${C}-${N}:${COMP} tcp://validator-dgt-c2-1:4204 ${BOT_TOKEN} ${ONBOT} ;
        if [ ${V} == '1' ]; then echo 'OFF NOTARY BOT '; else dgt-telebot -vv  -nn n${V} --connect tcp://validator-${PNM}-${C}-${N}:${COMP} tcp://validator-dgt-c2-1:4204  ${ONBOT}  ${REST_API} -cb ${CRYPTO_BACK} ${BOT_TOKEN} ${USER_NOTARY} ${LA} --vault-url http://vault-n${V}:${VPORT} --vault-on; fi; 
      "
    stop_signal: SIGKILL

  vault:
    build:                                              
      context: ..                                   
      dockerfile: docker/vault/Dockerfile-${DISTR}  
      args:                                         
        - http_proxy                                
        - https_proxy                               
        - no_proxy                                  
        - DGT_TOP=${DGT_TOP}  
    image: vault-dgt
    environment:                                 
    - DGT_HOME=/project/peer                     
    - DGT_TOP=${DGT_TOP}                         
    - CRYPTO_BACK=${CRYPTO_BACK}
    volumes:
      - ..:/project/${DGT_TOP}
      - ../../dgt_notaries/n${V}/etc:/vault/config
      - ../../dgt_notaries/n${V}/policy:/vault/policies
      - ../../dgt_notaries/n${V}/data/vault:/vault/data
      - ../../dgt_notaries/n${V}:/project/peer
    ports:
      - ${VPORT}:${VPORT}
      - ${CPORT}:${CPORT}
    expose:
      - ${VPORT}
    networks:        
    - network1
    #depends_on:       
    #   - telebot-dgt         
    environment:
      - VAULT_ADDR=http://vault-n${V}:${VPORT}
      - VAULT_API_ADDR=http://vault-n${V}:${VPORT}
      - VAULT_ADDRESS=http://vault-n${V}:${VPORT}
    container_name: vault-n${V}
    restart: unless-stopped
    cap_add:
      - IPC_LOCK  # -dev echo TOKEN  $$(cat /project/peer/etc/unseal.token) CONF= $$(cat /vault/config/vault.hcl);
    command: |                                                                                                                                                   
      sh -c "
        echo VAULT::LADDR=${LA} SADDR=${SADDR} ONBOT=${ONBOT} REST=${REST_API} CB=${CRYPTO_BACK} ; 
        dgtadm notary n${V} -cb ${CRYPTO_BACK} -a vault-n${V}:${VPORT} -ca vault-n${V}:${CPORT}  -sa http://${SADDR}  ${LA} ${REST_API} 
        export VAULT_TOKEN1=$$(cat /project/peer/etc/unseal.token) ;vault server  -log-level=debug -config=/vault/config/vault.hcl;
        tail -f /dev/null  
      "                                                                                                                                                          
    stop_signal: SIGKILL                                                                                                                                         


networks:
  network1:
     name: dgt1-network
